/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NRPPA-IEs"
 * 	found in "/home/kade-ddnkv/openairinterface5g/openair3/NRPPA/MESSAGES/ASN1/38455.asn"
 * 	`asn1c -gen-APER -gen-UPER -no-gen-OER -fcompound-names -no-gen-example -findirect-choice -fno-include-deps -D /home/kade-ddnkv/openairinterface5g/openair3/NRPPA/build/MESSAGES`
 */

#ifndef	_NRPPA_TrpMeasurementTimingQuality_H_
#define	_NRPPA_TrpMeasurementTimingQuality_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NRPPA_TrpMeasurementTimingQuality__resolution {
	NRPPA_TrpMeasurementTimingQuality__resolution_m0dot1	= 0,
	NRPPA_TrpMeasurementTimingQuality__resolution_m1	= 1,
	NRPPA_TrpMeasurementTimingQuality__resolution_m10	= 2,
	NRPPA_TrpMeasurementTimingQuality__resolution_m30	= 3
	/*
	 * Enumeration is extensible
	 */
} e_NRPPA_TrpMeasurementTimingQuality__resolution;

/* NRPPA_TrpMeasurementTimingQuality */
typedef struct NRPPA_TrpMeasurementTimingQuality {
	long	 measurementQuality;
	long	 resolution;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NRPPA_TrpMeasurementTimingQuality_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_NRPPA_resolution_3;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_NRPPA_TrpMeasurementTimingQuality;
extern asn_SEQUENCE_specifics_t asn_SPC_NRPPA_TrpMeasurementTimingQuality_specs_1;
extern asn_TYPE_member_t asn_MBR_NRPPA_TrpMeasurementTimingQuality_1[2];

#ifdef __cplusplus
}
#endif

#endif	/* _NRPPA_TrpMeasurementTimingQuality_H_ */
#include <asn_internal.h>
